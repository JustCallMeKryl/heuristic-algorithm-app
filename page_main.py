import streamlit as st
from streamlit_option_menu import option_menu

import page_Plotnikov_Zverev_criterions
import page_Goldberg
import page_Plotnikov_Zverev_criterions_plus_Goldberg


# Функция для сброса состояния
def reset_state():
    for key in st.session_state.keys():
        del st.session_state[key]


def main():
    st.sidebar.title("Навигация")

    # Получаем текущий выбор, чтобы сохранить его после сброса состояния
    current_selection = st.session_state.get("current_selection", "Главная")

    with st.sidebar:
        selected = option_menu(
            menu_title="",
            options=["Главная", "Алгоритм Плотникова-Зверева", "Алгоритм Голдберга",
                     "Алгоритм Плотникова-Зверева + Голдберг"],
            icons=["house", "graph-up", "book", "bar-chart"],
            menu_icon="cast",
            default_index=0,
            key="menu",  # Указываем ключ для сохранения выбора
        )

    # Если выбор изменился, сбрасываем состояние
    if selected != current_selection:
        reset_state()
        st.session_state["current_selection"] = selected  # Обновляем выбор после сброса состояния

    if selected == "Главная":
        st.header('Описание эвристических алгоритмов')

        st.write("""
            Эвристические алгоритмы — это методы поиска и оптимизации, которые применяются для решения сложных задач, 
            для которых трудно найти точное решение за разумное время.
        """)

        st.write("""
            ### Алгоритм Плотникова-Зверева по минимаксному критерию
            Этот алгоритм используется для распределения нагрузки по приборам таким образом, чтобы минимизировать 
            максимальную нагрузку на любой прибор. Он основан на поиске минимальных элементов и их распределении по 
            заданным критериям.
        """)

        st.write("""
            ### Алгоритм Плотникова-Зверева по минимаксному критерию с барьером и дополнительной матрицей
            Этот алгоритм является усовершенствованной версией предыдущего алгоритма. Он вводит дополнительный барьер, 
            который помогает более равномерно распределять нагрузку, предотвращая перегрузку отдельных приборов.
        """)

        st.write("""
            ### Модифицированная модель Голдберга
            Модель Голдберга является генетическим алгоритмом, который используется для оптимизации сложных задач путем 
            имитации процессов естественного отбора. Модифицированная версия алгоритма включает улучшения, 
            позволяющие быстрее находить оптимальные решения.
        """)

        st.write("""
            ### Комбинированный алгоритм Плотникова-Зверева и модифицированной модели Голдберга
            Этот алгоритм сочетает в себе подходы алгоритмов Плотникова-Зверева и Голдберга, используя их преимущества 
            для более эффективного решения задач распределения и оптимизации.
        """)

    elif selected == "Алгоритм Плотникова-Зверева":
        page_Plotnikov_Zverev_criterions.app()
    elif selected == "Алгоритм Голдберга":
        page_Goldberg.app()
    elif selected == "Алгоритм Плотникова-Зверева + Голдберг":
        page_Plotnikov_Zverev_criterions_plus_Goldberg.app()


if __name__ == "__main__":
    main()
